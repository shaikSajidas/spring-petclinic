pipeline {
     agent any
     stages {
         stage ('cloning the repo') {
             steps {
                 git changelog: false, poll: false, url: 'https://github.com/shaikSajidas/spring-petclinic.git'
             }
         }

        stage('build image using docker file') {
            steps {
                sh 'docker image build -t spring:$BUILD_NUMBER .'
            }
        }
        
        stage ('push into dockerhub') {             
             steps {
                 withCredentials([usernamePassword(credentialsId: 'docker_hub_credentials', passwordVariable: 'docker_password', usernameVariable: 'docker_username')]) {
               //withCredentials([usernamePassword(credentialsId: '9aae2e42-a470-4e7d-8413-52f260dcd5e5', passwordVariable: 'docker_password', usernameVariable: 'docker_username')]) {
                    sh 'docker login -u $docker_username -p $docker_password'
                   
                    }
                    sh 'sudo docker tag spring:$BUILD_NUMBER sajidan/spring:$BUILD_NUMBER'
                     sh 'sudo docker push sajidan/spring:$BUILD_NUMBER'
                 }
             }
             
       stage('deploy to kubeclust') {
            steps {
                sh 'kubectl apply -f spcdeploy_service.yml' 
            }
        }

        stage('deploy to production env') {
            steps {
                sh 'kubectl create deployment prod-pod --image=sajidan/spring:latest  -n=production --replicas=2'
            }
        }

        stage('deploy to developer env') { 
            steps {
                sh 'kubectl create deployment dev-pod --image=sajidan/spring:latest  -n=developer --replicas=2'
           }
        }
        stage('deploy to qa env') {
            steps {
                sh 'kubectl create deployment test-pod --image=sajidan/spring:latest -n=qa --replicas=2'
            }
        }


    }
}
